datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

enum Role {
  ADMIN
  USER
}

enum SimulationType {
  ACPYPE
  APO
  PRODRG
}

enum Status {
  QUEUED
  RUNNING
  COMPLETED
  CANCELED
  ERRORED
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  username      String    @unique
  password      String?
  name          String?
  active        Boolean   @default(false)
  deleted       Boolean?  @default(false)
  emailVerified Boolean   @default(false)
  role          Role      @default(USER)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime? @map("updated_at")

  passwordResets      UserPasswordReset[]
  simulations         Simulation[]
  userEmailValidation UserEmailValidation[]

  @@map("users")
}

model Simulation {
  id               String         @id @default(uuid())
  userId           String         @map("user_id")
  moleculeName     String         @map("molecule_name")
  type             SimulationType
  createdAt        DateTime       @default(now()) @map("created_at")
  startedAt        DateTime?      @map("started_at")
  endedAt          DateTime?      @map("ended_at")
  status           Status         @default(QUEUED)
  erroredOnCommand String?        @map("errored_on_command")

  user User @relation(fields: [userId], references: [id])

  @@map("simulations")
}

model UserPasswordReset {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  expiresAt DateTime @default(dbgenerated("NOW() + interval '10 min'")) @map("expires_at")
  completed Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id])

  @@map("user_password_resets")
}

model UserEmailValidation {
  id        String   @id @unique @default(uuid())
  userId    String   @unique @map("user_id")
  used      Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@map("user_email_validations")
}

model AppSettings {
  id              String   @id @default(cuid())
  maintenanceMode Boolean  @default(false) @map("maintenance_mode")
  updatedAt       DateTime @default(now()) @map("updated_at")

  @@map("app_settings")
}
